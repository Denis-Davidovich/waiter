<?php

class Waiter
{
    /**
     * var string[]
     */
    const steps = [
        // 0) Поздороваться, коротко рассказать суть проекта. Начнем?
        "Добрый день. Вы запустили специальный навык Виртуальный официант. Я помогу Вам сделать заказ, начнем?",
        //Ожидание: ответное приветствие, согласие продолжить.

        // 1) рассказать меню на сегодня.
        //"Меню: - Перловка охотничья томленая со свиными ребрышками и овощами \n - Шейка аппетитная (свинина) запечённая в копчённой паприке с томатным соусом,\n - Отбивная куриная в хрустящей корочке.\n - Блинчики с яблоком и корицей/клубникой/твopoгoм.\n - Сырники ванильные со сметаной.\n - Картофель отварной с зеленью и маслом\n - Макароны с маслом.\n - Плетенка яблоком.",
        "Добро пожаловать! Рад предложить вам наше меню. На сегодня: 

            * Сначала хочу предложить вам перловку охотничью, приготовленную со свиными ребрышками и овощами - идеальный вариант для старта обеда.
            * Далее, мы имеем шейку аппетитную из свинины, которая запечена копченой паприкой в соусе из помидоров.
            * Также имеется великолепная отбивная из курицы в хрустящей корочке.
            * Из сладкого можно попробовать блинчики с яблоком и корицей, клубникой или творогом.
            * Вы также можете заказать сырники ванильные со сметаной – наши посетители очень их хвалят.
            * В качестве гарнира у нас представлены картофель, отваренный с зеленью и маслом, и макароны с маслом.
            * А чтобы завершить ваш обед, я бы рекомендовал плетенку с яблоками.
            
            Что вы желаете заказать?",
        //Ожидание: что-то похожее на "Перловку, отбивную, блинчики"

        // 2. Принять распознать заказанные блюда.
        //Реальные реплики пользователя.

        // c) Проговорить итоговый заказ.
        // d) Оправить заказ в чат.
        // e) Уточнить номер телефона.
        // f) пожелать всего лучшего
        'Пожелать всего лучшего',
    ];

    private int $step = 0;

    public function __construct(Session $session)
    {

    }

    public function hello(): string
    {
        $this->step = 0;
        return $this::steps[0];
    }

    public function say(): string
    {
        if (!$this->step) {
            $this->step++;
            $this->hello();
        }

        //Проверяем выполнен ли текущий шаг,
        //да, идем дальше
        //нет,
        //  Пытаемся вернуть клиента на трек.
        //  итерируем, зовём на помощь

        if ($this->getCriteria()) {
            $this->step++;
            return $this::steps[$this->step];
        }
    }


    private function getCriteria(): Criteria
    {
        return new Criteria();
    }

    public function getStep(): int
    {
        return $this->step;
    }

    public function isComplete(): bool
    {
        return $this->step + 1 >= count($this::steps);
    }
}
